
export const generateUserId = () => {
  return 'user-' + crypto.randomUUID().substring(0, 8);
};

export const formatRelativeTime = (timestamp: string) => {
  const now = new Date();
  const time = new Date(timestamp);
  const diff = now.getTime() - time.getTime();
  const hours = Math.floor(diff / (1000 * 60 * 60));
  
  if (hours < 1) return 'Ù…Ù†Ø° Ø¯Ù‚Ø§Ø¦Ù‚';
  if (hours === 1) return 'Ù…Ù†Ø° Ø³Ø§Ø¹Ø©';
  if (hours < 24) return `Ù…Ù†Ø° ${hours} Ø³Ø§Ø¹Ø§Øª`;
  
  const days = Math.floor(hours / 24);
  if (days === 1) return 'Ù…Ù†Ø° ÙŠÙˆÙ…';
  return `Ù…Ù†Ø° ${days} Ø£ÙŠØ§Ù…`;
};

export const getActivityStatusText = (isActive: boolean, lastActiveTime: string) => {
  if (!isActive) return '';
  const lastActive = new Date(lastActiveTime);
  const now = new Date();
  const diffMinutes = Math.floor((now.getTime() - lastActive.getTime()) / (1000 * 60));
  
  if (diffMinutes < 2) return 'ðŸŸ¢ ÙŠØ¹Ù…Ù„ Ø§Ù„Ø¢Ù†';
  if (diffMinutes < 60) return `ðŸŸ¡ Ø¢Ø®Ø± Ù†Ø´Ø§Ø· Ù…Ù†Ø° ${diffMinutes} Ø¯Ù‚ÙŠÙ‚Ø©`;
  return 'ðŸ”´ ØºÙŠØ± Ù†Ø´Ø· Ø­Ø§Ù„ÙŠØ§Ù‹';
};

export const getCurrentSearchText = (searchCategory: string, customSearch: string, searchCategories: any[]) => {
  if (searchCategory === 'custom') return customSearch || 'Ù„Ù… ØªØ­Ø¯Ø¯ Ø¨Ø­Ø« Ù…Ø®ØµØµ';
  if (searchCategory === 'research') return 'Ø¨Ø­ÙˆØ«Ø§ØªÙŠ Ø§Ù„Ø³Ø§Ø¨Ù‚Ø©';
  const category = searchCategories.find(cat => cat.value === searchCategory);
  return category?.label || searchCategory;
};
