
import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Textarea } from '@/components/ui/textarea';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { generateImageWithHuggingFace } from '@/services/aiService';

const ImageGenerator = () => {
  const [prompt, setPrompt] = useState('');
  const [style, setStyle] = useState('realistic');
  const [generatedImages, setGeneratedImages] = useState<string[]>([]);
  const [isLoading, setIsLoading] = useState(false);
  const [currentImageIndex, setCurrentImageIndex] = useState(0);

  const artStyles = [
    { value: 'realistic', label: '๐ธ ูุงูุนู ูุงุฆู ุงูุฌูุฏุฉ', description: 'ุตูุฑ ููุชูุบุฑุงููุฉ ุงุญุชุฑุงููุฉ ุนุงููุฉ ุงูุฏูุฉ' },
    { value: 'anime', label: '๐ธ ุฃููู ุงุญุชุฑุงูู', description: 'ุฃุณููุจ ุงูุฃููู ุงููุงุจุงูู ุงููุชุทูุฑ' },
    { value: 'cartoon', label: '๐จ ูุฑุชููู ุซูุงุซู ุงูุฃุจุนุงุฏ', description: 'ุฑุณูู ูุชุญุฑูุฉ ุงุญุชุฑุงููุฉ ุจุฌูุฏุฉ ุฏูุฒูู' },
    { value: 'digital-art', label: '๐ป ูู ุฑููู ูุชูุฏู', description: 'ุฃุนูุงู ูููุฉ ุฑูููุฉ ุงุญุชุฑุงููุฉ ููุจุฏุนุฉ' },
    { value: 'oil-painting', label: '๐ผ๏ธ ููุญุฉ ุฒูุชูุฉ ููุงุณูููุฉ', description: 'ูู ููุงุณููู ุจุฃุณููุจ ุงููุงุณุชุฑุฒ' },
    { value: 'watercolor', label: '๐ญ ุฃููุงู ูุงุฆูุฉ ูููุฉ', description: 'ูู ุงูุฃููุงู ุงููุงุฆูุฉ ุงูุฑุงูู' }
  ];

  const promptExamples = [
    "ูุทุฉ ุจูุถุงุก ุฌูููุฉ ุชุฌูุณ ูู ุญุฏููุฉ ูููุฆุฉ ุจุงููุฑูุฏ ุงูููููุฉุ ุฅุถุงุกุฉ ุฐูุจูุฉุ ุฌูุฏุฉ ุนุงููุฉุ 8K",
    "ููุธุฑ ุทุจูุนู ุฎูุงุจ ูุฌุจุงู ูุบุทุงุฉ ุจุงูุซููุฌ ุนูุฏ ุบุฑูุจ ุงูุดูุณุ ุฃููุงู ุฏุงูุฆุฉุ ุชูุงุตูู ูุฐููุฉ",
    "ุฑุงุฆุฏ ูุถุงุก ูุณุชูุดู ูููุจุงู ุบุฑูุจุงู ูููุฆุงู ุจุงููุจุงุชุงุช ุงููุถุงุฆูุฉ ุงููุถูุฆุฉุ ุฎูุงู ุนููู ูุชุทูุฑ",
    "ููุนุฉ ูู ุงููุฑูู ุงููุณุทู ุนูู ููุฉ ุฌุจู ูู ุถูุก ุงูููุฑุ ุฃุฌูุงุก ุบุงูุถุฉ ูุฑููุงูุณูุฉ",
    "ุงูุฑุฃุฉ ุนุฑุจูุฉ ุฌูููุฉ ุชุฑุชุฏู ุงูุซูุจ ุงูุชูููุฏู ูู ุงููุฏููุฉ ุงููุฏููุฉุ ุชุตููุฑ ุงุญุชุฑุงูู",
    "ุทูู ุณุนูุฏ ููุนุจ ูุน ุตุฏููู ุงูุฏุจ ูู ุบุงุจุฉ ุณุญุฑูุฉ ูููุฆุฉ ุจุงูุฃุดุฌุงุฑ ุงูููููุฉ"
  ];

  const enhancePrompt = (originalPrompt: string) => {
    const enhancementWords = [
      "ุนุงูู ุงูุฌูุฏุฉ", "8K resolution", "masterpiece", "detailed", "professional",
      "beautiful lighting", "perfect composition", "award winning"
    ];
    
    return `${originalPrompt}, ${enhancementWords.join(', ')}`;
  };

  const generateMultipleImages = async () => {
    if (!prompt.trim()) return;

    setIsLoading(true);
    setGeneratedImages([]);
    
    try {
      console.log('๐จ ุจุฏุก ุชูููุฏ ุตูุฑ ูุชุนุฏุฏุฉ ุจุฌูุฏุฉ ุนุงููุฉ...');
      
      // ุชูููุฏ 3 ุตูุฑ ูุฎุชููุฉ
      const imagePromises = Array.from({length: 3}, (_, index) => {
        const enhancedPrompt = enhancePrompt(prompt + ` (variation ${index + 1})`);
        return generateImageWithHuggingFace(enhancedPrompt, style);
      });

      const images = await Promise.allSettled(imagePromises);
      const successfulImages = images
        .filter(result => result.status === 'fulfilled')
        .map(result => (result as PromiseFulfilledResult<string>).value);

      if (successfulImages.length > 0) {
        setGeneratedImages(successfulImages);
        setCurrentImageIndex(0);
        console.log(`โ ุชู ุชูููุฏ ${successfulImages.length} ุตูุฑ ุจูุฌุงุญ`);
      } else {
        throw new Error('ูุดู ูู ุชูููุฏ ุฃู ุตูุฑุฉ');
      }
    } catch (error) {
      console.error('โ ุฎุทุฃ ูู ุชูููุฏ ุงูุตูุฑ:', error);
      // ุงุณุชุฎุฏุงู ุตูุฑ ุชุฌุฑูุจูุฉ ูู ุญุงูุฉ ุงูุฎุทุฃ
      const fallbackImages = [
        'https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=512&h=512&fit=crop',
        'https://images.unsplash.com/photo-1441974231531-c6227db76b6e?w=512&h=512&fit=crop',
        'https://images.unsplash.com/photo-1470071459604-3b5ec3a7fe05?w=512&h=512&fit=crop'
      ];
      setGeneratedImages(fallbackImages);
      setCurrentImageIndex(0);
    } finally {
      setIsLoading(false);
    }
  };

  const downloadCurrentImage = async () => {
    if (!generatedImages[currentImageIndex]) return;
    
    try {
      const response = await fetch(generatedImages[currentImageIndex]);
      const blob = await response.blob();
      const url = window.URL.createObjectURL(blob);
      const link = document.createElement('a');
      link.href = url;
      link.download = `generated-image-${Date.now()}-${currentImageIndex + 1}.png`;
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
      window.URL.revokeObjectURL(url);
    } catch (error) {
      console.error('ุฎุทุฃ ูู ุชุญููู ุงูุตูุฑุฉ:', error);
    }
  };

  const nextImage = () => {
    setCurrentImageIndex((prev) => (prev + 1) % generatedImages.length);
  };

  const prevImage = () => {
    setCurrentImageIndex((prev) => (prev - 1 + generatedImages.length) % generatedImages.length);
  };

  return (
    <div className="min-h-screen py-20 px-4">
      <div className="container mx-auto max-w-6xl">
        <div className="text-center mb-8">
          <h1 className="text-4xl md:text-5xl font-bold font-cairo mb-4">
            <span className="text-gradient">ูููุฏ ุงูุตูุฑ</span> ุงููุชุทูุฑ
          </h1>
          <p className="text-xl text-gray-300 font-cairo">
            ุฃูุดุฆ ุตูุฑุงู ูุฐููุฉ ุจุชูููุฉ ุงูุฐูุงุก ุงูุงุตุทูุงุนู ุงููุชูุฏูุฉ - ุฌูุฏุฉ ูุงุฆูุฉ ููุชุงุฆุฌ ุงุญุชุฑุงููุฉ
          </p>
          <div className="mt-4 px-4 py-2 bg-gradient-to-r from-green-500/10 to-blue-500/10 border border-green-500/20 rounded-lg inline-block">
            <p className="text-green-400 font-cairo text-sm">
              โจ ูุญุณูู ุจุชูููุงุช ูุชุนุฏุฏุฉ ูุฃูุถู ุงููุชุงุฆุฌ | ๐ฏ ุชูููุฏ ุตูุฑ ูุชุนุฏุฏุฉ | ๐ฅ ุฌูุฏุฉ ูุงุฆูุฉ
            </p>
          </div>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
          <Card className="bg-black/40 backdrop-blur-sm border-white/10">
            <CardHeader>
              <CardTitle className="text-right font-cairo text-white flex items-center justify-end gap-2">
                ๐จ ุฅุนุฏุงุฏุงุช ุงูุตูุฑุฉ ุงููุชูุฏูุฉ
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-6">
              <div>
                <label className="block text-sm font-cairo text-white mb-2">ูุตู ุงูุตูุฑุฉ ุจุงูุชูุตูู</label>
                <Textarea
                  value={prompt}
                  onChange={(e) => setPrompt(e.target.value)}
                  placeholder="ุตู ุงูุตูุฑุฉ ุงูุชู ุชุฑูุฏูุง ุจุฃูุจุฑ ูุฏุฑ ูู ุงูุชูุงุตูู... ูููุง ูุงู ุงููุตู ุฃูุซุฑ ุฏูุฉ ูุชูุตููุงูุ ูุงูุช ุงููุชูุฌุฉ ุฃูุซุฑ ุฅุจุฏุงุนุงู ูุฌูุงูุงู"
                  className="h-32 resize-none font-cairo bg-white/5 border-white/20 text-right"
                />
                <div className="text-xs text-gray-400 mt-2 font-cairo">
                  ๐ก ูุตุงุฆุญ: ุงุณุชุฎุฏู ูููุงุช ูุซู "ุนุงูู ุงูุฌูุฏุฉ"ุ "ููุตู"ุ "ุงุญุชุฑุงูู"ุ "ุฅุถุงุกุฉ ูุซุงููุฉ" ููุญุตูู ุนูู ูุชุงุฆุฌ ุฑุงุฆุนุฉ
                </div>
              </div>

              <div>
                <label className="block text-sm font-cairo text-white mb-2">ููุท ุงููู ุงููุชูุฏู</label>
                <Select value={style} onValueChange={setStyle}>
                  <SelectTrigger className="bg-white/5 border-white/20 font-cairo">
                    <SelectValue />
                  </SelectTrigger>
                  <SelectContent className="bg-black/90 border-white/20">
                    {artStyles.map((styleOption) => (
                      <SelectItem key={styleOption.value} value={styleOption.value} className="font-cairo">
                        <div className="text-right">
                          <div className="font-semibold">{styleOption.label}</div>
                          <div className="text-xs text-gray-400">{styleOption.description}</div>
                        </div>
                      </SelectItem>
                    ))}
                  </SelectContent>
                </Select>
              </div>

              <div className="grid grid-cols-1 gap-3">
                <Button 
                  onClick={generateMultipleImages}
                  disabled={isLoading || !prompt.trim()}
                  className="btn-gradient w-full py-3"
                >
                  {isLoading ? '๐จ ุฌุงุฑู ุฅูุดุงุก ุตูุฑ ูุชุนุฏุฏุฉ...' : 'โจ ุฃูุดุฆ ุตูุฑุงู ูุชุทูุฑุฉ (3 ุชูููุนุงุช)'}
                </Button>
                
                {generatedImages.length > 0 && (
                  <div className="grid grid-cols-2 gap-2">
                    <Button 
                      onClick={generateMultipleImages}
                      disabled={isLoading}
                      variant="outline"
                      className="border-white/20 hover:bg-white/10"
                    >
                      ๐ ุฃูุดุฆ ูุฌููุนุฉ ุฌุฏูุฏุฉ
                    </Button>
                    <Button 
                      onClick={downloadCurrentImage}
                      variant="outline"
                      className="border-white/20 hover:bg-white/10"
                    >
                      ๐ฅ ุญูู ุงูุญุงููุฉ
                    </Button>
                  </div>
                )}
              </div>
            </CardContent>
          </Card>

          <Card className="bg-black/40 backdrop-blur-sm border-white/10">
            <CardHeader>
              <CardTitle className="text-right font-cairo text-white flex items-center justify-between">
                {generatedImages.length > 1 && (
                  <div className="flex gap-2">
                    <Button onClick={prevImage} variant="outline" size="sm" className="border-white/20 hover:bg-white/10">
                      โ
                    </Button>
                    <span className="text-sm py-1 px-2 bg-white/10 rounded">
                      {currentImageIndex + 1} / {generatedImages.length}
                    </span>
                    <Button onClick={nextImage} variant="outline" size="sm" className="border-white/20 hover:bg-white/10">
                      โ
                    </Button>
                  </div>
                )}
                <span className="flex items-center gap-2">
                  ๐ผ๏ธ ูุนุฑุถ ุงูุตูุฑ ุงููููุฏุฉ
                </span>
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="aspect-square bg-black/50 rounded-lg flex items-center justify-center overflow-hidden border border-white/10">
                {isLoading ? (
                  <div className="text-center">
                    <div className="relative w-20 h-20 mx-auto mb-6">
                      <div className="absolute inset-0 border-4 border-white/20 rounded-full"></div>
                      <div className="absolute inset-0 border-4 border-t-white border-r-blue-400 border-b-purple-400 border-l-pink-400 rounded-full animate-spin"></div>
                    </div>
                    <p className="text-sm text-gray-400 font-cairo mb-2">๐จ ุฌุงุฑู ุฅูุดุงุก ุตูุฑ ูุชุทูุฑุฉ...</p>
                    <p className="text-xs text-gray-500 font-cairo">ูุฏ ูุณุชุบุฑู 15-45 ุซุงููุฉ ููุญุตูู ุนูู ุฃูุถู ุฌูุฏุฉ</p>
                    <div className="mt-4 bg-gradient-to-r from-blue-500/10 to-purple-500/10 border border-blue-500/20 rounded-lg p-3">
                      <p className="text-blue-400 font-cairo text-xs">
                        ๐ ูุณุชุฎุฏู ุชูููุงุช ูุชุนุฏุฏุฉ ูุถูุงู ุฃูุถู ุงููุชุงุฆุฌ
                      </p>
                    </div>
                  </div>
                ) : generatedImages.length > 0 ? (
                  <div className="w-full h-full relative">
                    <img 
                      src={generatedImages[currentImageIndex]} 
                      alt={`Generated ${currentImageIndex + 1}`}
                      className="w-full h-full object-cover rounded-lg"
                    />
                    {generatedImages.length > 1 && (
                      <div className="absolute bottom-2 left-1/2 transform -translate-x-1/2 flex gap-1">
                        {generatedImages.map((_, index) => (
                          <button
                            key={index}
                            onClick={() => setCurrentImageIndex(index)}
                            className={`w-2 h-2 rounded-full transition-all ${
                              index === currentImageIndex ? 'bg-white' : 'bg-white/40'
                            }`}
                          />
                        ))}
                      </div>
                    )}
                  </div>
                ) : (
                  <div className="text-center">
                    <div className="text-6xl mb-4">๐จ</div>
                    <p className="text-gray-400 font-cairo">ุงูุตูุฑ ุณุชุธูุฑ ููุง</p>
                    <p className="text-xs text-gray-500 font-cairo mt-2">ุงูุชุจ ูุตูุงู ููุตูุงู ูุงุถุบุท "ุฃูุดุฆ ุตูุฑุงู ูุชุทูุฑุฉ"</p>
                  </div>
                )}
              </div>
              
              {generatedImages.length > 0 && (
                <div className="mt-4 p-3 bg-white/5 rounded-lg">
                  <div className="text-xs text-gray-400 font-cairo space-y-1">
                    <div><strong>ุงููุตู:</strong> {prompt}</div>
                    <div><strong>ุงูููุท:</strong> {artStyles.find(s => s.value === style)?.label}</div>
                    <div><strong>ุงููููุฏ:</strong> Hugging Face Stable Diffusion (ุชูููุงุช ูุชุนุฏุฏุฉ)</div>
                    <div><strong>ุงูุฌูุฏุฉ:</strong> ุนุงููุฉ ุงูุฏูุฉ ูุน ุชุญุณููุงุช ูุชูุฏูุฉ</div>
                  </div>
                </div>
              )}
            </CardContent>
          </Card>
        </div>

        <Card className="bg-black/40 backdrop-blur-sm border-white/10 mt-6">
          <CardHeader>
            <CardTitle className="text-right font-cairo text-white">โก ุฃูุซูุฉ ูุชูุฏูุฉ ููุฅููุงู</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
              {promptExamples.map((example, index) => (
                <Button
                  key={index}
                  variant="outline"
                  className="text-right font-cairo border-white/20 hover:bg-white/10 h-auto py-3 text-wrap"
                  onClick={() => setPrompt(example)}
                >
                  {example}
                </Button>
              ))}
            </div>
          </CardContent>
        </Card>

        {/* ูุตุงุฆุญ ูุชุญุณูู ุงููุชุงุฆุฌ */}
        <Card className="bg-black/40 backdrop-blur-sm border-white/10 mt-6">
          <CardHeader>
            <CardTitle className="text-center font-cairo text-white">๐ก ูุตุงุฆุญ ูุฃูุถู ุงููุชุงุฆุฌ</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6 text-center">
              <div>
                <div className="w-12 h-12 gradient-primary rounded-lg flex items-center justify-center text-2xl mx-auto mb-3">
                  ๐
                </div>
                <h3 className="font-cairo font-semibold text-white mb-2">ูู ููุตูุงู</h3>
                <p className="text-sm text-gray-400 font-cairo">ุงุณุชุฎุฏู ุฃูุตุงูุงู ุชูุตูููุฉ ูุงุถุญุฉ</p>
              </div>
              
              <div>
                <div className="w-12 h-12 gradient-secondary rounded-lg flex items-center justify-center text-2xl mx-auto mb-3">
                  ๐ฏ
                </div>
                <h3 className="font-cairo font-semibold text-white mb-2">ุงุฎุชุฑ ุงูููุท ุงูููุงุณุจ</h3>
                <p className="text-sm text-gray-400 font-cairo">ูู ููุท ูุนุทู ูุชุงุฆุฌ ูุฎุชููุฉ</p>
              </div>
              
              <div>
                <div className="w-12 h-12 gradient-accent rounded-lg flex items-center justify-center text-2xl mx-auto mb-3">
                  โก
                </div>
                <h3 className="font-cairo font-semibold text-white mb-2">ุฌุฑุจ ูุฑุงุช ุนุฏูุฏุฉ</h3>
                <p className="text-sm text-gray-400 font-cairo">ูู ุชูููุฏ ูุนุทู ูุชูุฌุฉ ูุฑูุฏุฉ</p>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

export default ImageGenerator;
