
import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Textarea } from '@/components/ui/textarea';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { generateImageWithHuggingFace } from '@/services/aiService';

const ImageGenerator = () => {
  const [prompt, setPrompt] = useState('');
  const [style, setStyle] = useState('realistic');
  const [generatedImage, setGeneratedImage] = useState('');
  const [isLoading, setIsLoading] = useState(false);

  const artStyles = [
    { value: 'realistic', label: '๐ฏ ูุงูุนู', description: 'ุตูุฑ ูุงูุนูุฉ ุนุงููุฉ ุงูุฌูุฏุฉ' },
    { value: 'anime', label: '๐ธ ุฃููู', description: 'ุฃุณููุจ ุงูุฑุณูู ุงููุชุญุฑูุฉ ุงููุงุจุงููุฉ' },
    { value: 'cartoon', label: '๐จ ูุฑุชููู', description: 'ุฃุณููุจ ุงูุฑุณูู ุงููุชุญุฑูุฉ' },
    { value: 'digital-art', label: '๐ป ูู ุฑููู', description: 'ุฃุนูุงู ูููุฉ ุฑูููุฉ ุญุฏูุซุฉ' },
    { value: 'oil-painting', label: '๐ผ๏ธ ุฑุณู ุฒูุชู', description: 'ุฃุณููุจ ุงูููุญุงุช ุงูุฒูุชูุฉ ุงูููุงุณูููุฉ' },
    { value: 'watercolor', label: '๐ญ ุฃููุงู ูุงุฆูุฉ', description: 'ุฃุณููุจ ุงูุฃููุงู ุงููุงุฆูุฉ' }
  ];

  const promptExamples = [
    "ูุทุฉ ุฌูููุฉ ุชุฌูุณ ูู ุญุฏููุฉ ูููุฆุฉ ุจุงููุฑูุฏ ุงูููููุฉ",
    "ููุธุฑ ุทุจูุนู ุฎูุงุจ ูุฌุจุงู ูุบุทุงุฉ ุจุงูุซููุฌ ุนูุฏ ุบุฑูุจ ุงูุดูุณ",
    "ุฑุงุฆุฏ ูุถุงุก ููุดู ุนูู ุณุทุญ ูููุจ ุบุฑูุจ ูููุก ุจุงููุจุงุชุงุช ุงููุถุงุฆูุฉ",
    "ููุนุฉ ูู ุงููุฑูู ุงููุณุทู ุนูู ููุฉ ุฌุจู ูู ุถูุก ุงูููุฑ",
    "ุงูุฑุฃุฉ ุนุฑุจูุฉ ุฌูููุฉ ุชุฑุชุฏู ุงูุซูุจ ุงูุชูููุฏู ูู ุงููุฏููุฉ ุงููุฏููุฉ",
    "ุทูู ููุนุจ ูุน ุงูุฏุจุจุฉ ูู ุงูุบุงุจุฉ ุงููุทูุฑุฉ"
  ];

  const handleGenerate = async () => {
    if (!prompt.trim()) return;

    setIsLoading(true);
    
    try {
      console.log('ุจุฏุก ุชูููุฏ ุงูุตูุฑุฉ ุจุงุณุชุฎุฏุงู Hugging Face...');
      const imageUrl = await generateImageWithHuggingFace(prompt, style);
      setGeneratedImage(imageUrl);
      console.log('ุชู ุชูููุฏ ุงูุตูุฑุฉ ุจูุฌุงุญ:', imageUrl);
    } catch (error) {
      console.error('ุฎุทุฃ ูู ุชูููุฏ ุงูุตูุฑุฉ:', error);
      // ุงุณุชุฎุฏุงู ุตูุฑุฉ ุชุฌุฑูุจูุฉ ูู ุญุงูุฉ ุงูุฎุทุฃ
      setGeneratedImage('https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=512&h=512&fit=crop');
    } finally {
      setIsLoading(false);
    }
  };

  const downloadImage = async () => {
    if (!generatedImage) return;
    
    try {
      const response = await fetch(generatedImage);
      const blob = await response.blob();
      const url = window.URL.createObjectURL(blob);
      const link = document.createElement('a');
      link.href = url;
      link.download = `generated-image-${Date.now()}.png`;
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
      window.URL.revokeObjectURL(url);
    } catch (error) {
      console.error('ุฎุทุฃ ูู ุชุญููู ุงูุตูุฑุฉ:', error);
    }
  };

  const generateNewImage = () => {
    if (generatedImage) {
      URL.revokeObjectURL(generatedImage);
    }
    handleGenerate();
  };

  return (
    <div className="min-h-screen py-20 px-4">
      <div className="container mx-auto max-w-6xl">
        <div className="text-center mb-8">
          <h1 className="text-4xl md:text-5xl font-bold font-cairo mb-4">
            <span className="text-gradient">ูููุฏ ุงูุตูุฑ</span> ุงูุฐูู
          </h1>
          <p className="text-xl text-gray-300 font-cairo">
            ุฃูุดุฆ ุตูุฑุงู ูุฑูุฏุฉ ูู ุงููุตู ุงููุตู ุจุชูููุฉ Hugging Face ุงููุชุทูุฑุฉ
          </p>
          <div className="mt-4 px-4 py-2 bg-green-500/10 border border-green-500/20 rounded-lg inline-block">
            <p className="text-green-400 font-cairo text-sm">
              โจ ูุญุณูู ุจุชูููุฉ Hugging Face ูุตูุฑ ุฃูุซุฑ ุฏูุฉ ูุฌูุฏุฉ
            </p>
          </div>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
          <Card className="bg-black/40 backdrop-blur-sm border-white/10">
            <CardHeader>
              <CardTitle className="text-right font-cairo text-white flex items-center justify-end gap-2">
                ๐จ ุฅุนุฏุงุฏุงุช ุงูุตูุฑุฉ
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-6">
              <div>
                <label className="block text-sm font-cairo text-white mb-2">ูุตู ุงูุตูุฑุฉ ุจุงูุชูุตูู</label>
                <Textarea
                  value={prompt}
                  onChange={(e) => setPrompt(e.target.value)}
                  placeholder="ุตู ุงูุตูุฑุฉ ุงูุชู ุชุฑูุฏ ุฅูุดุงุกูุง ุจุงูุชูุตูู... ูููุง ูุงู ุงููุตู ุฃูุซุฑ ุชูุตููุงูุ ูุงูุช ุงููุชูุฌุฉ ุฃูุถู"
                  className="h-32 resize-none font-cairo bg-white/5 border-white/20 text-right"
                />
                <div className="text-xs text-gray-400 mt-2 font-cairo">
                  ๐ก ูุตูุญุฉ: ุงุณุชุฎุฏู ูููุงุช ูุตููุฉ ูุซู "ุนุงูู ุงูุฌูุฏุฉ"ุ "ููุตู"ุ "ุฌููู" ููุญุตูู ุนูู ูุชุงุฆุฌ ุฃูุถู
                </div>
              </div>

              <div>
                <label className="block text-sm font-cairo text-white mb-2">ููุท ุงููู</label>
                <Select value={style} onValueChange={setStyle}>
                  <SelectTrigger className="bg-white/5 border-white/20 font-cairo">
                    <SelectValue />
                  </SelectTrigger>
                  <SelectContent className="bg-black/90 border-white/20">
                    {artStyles.map((styleOption) => (
                      <SelectItem key={styleOption.value} value={styleOption.value} className="font-cairo">
                        <div className="text-right">
                          <div>{styleOption.label}</div>
                          <div className="text-xs text-gray-400">{styleOption.description}</div>
                        </div>
                      </SelectItem>
                    ))}
                  </SelectContent>
                </Select>
              </div>

              <div className="grid grid-cols-1 gap-2">
                <Button 
                  onClick={handleGenerate}
                  disabled={isLoading || !prompt.trim()}
                  className="btn-gradient w-full"
                >
                  {isLoading ? 'ุฌุงุฑู ุฅูุดุงุก ุงูุตูุฑุฉ...' : 'ุฃูุดุฆ ุงูุตูุฑุฉ ๐จ'}
                </Button>
                
                {generatedImage && (
                  <Button 
                    onClick={generateNewImage}
                    disabled={isLoading}
                    variant="outline"
                    className="w-full border-white/20 hover:bg-white/10"
                  >
                    ๐ ุฃูุดุฆ ุตูุฑุฉ ุฌุฏูุฏุฉ
                  </Button>
                )}
              </div>
            </CardContent>
          </Card>

          <Card className="bg-black/40 backdrop-blur-sm border-white/10">
            <CardHeader>
              <CardTitle className="text-right font-cairo text-white flex items-center justify-between">
                {generatedImage && (
                  <Button 
                    onClick={downloadImage}
                    variant="outline"
                    size="sm"
                    className="border-white/20 hover:bg-white/10"
                  >
                    ๐ฅ ุชุญููู
                  </Button>
                )}
                <span className="flex items-center gap-2">
                  ๐ผ๏ธ ุงูุตูุฑุฉ ุงููููุฏุฉ
                </span>
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="aspect-square bg-black/50 rounded-lg flex items-center justify-center overflow-hidden border border-white/10">
                {isLoading ? (
                  <div className="text-center">
                    <div className="w-16 h-16 border-4 border-white/20 border-t-white rounded-full animate-spin mx-auto mb-4"></div>
                    <p className="text-sm text-gray-400 font-cairo">ุฌุงุฑู ุฅูุดุงุก ุตูุฑุฉ ูุฑูุฏุฉ...</p>
                    <p className="text-xs text-gray-500 font-cairo mt-2">ูุฏ ูุณุชุบุฑู ูุฐุง 10-30 ุซุงููุฉ</p>
                    <div className="mt-4 bg-blue-500/10 border border-blue-500/20 rounded-lg p-3">
                      <p className="text-blue-400 font-cairo text-xs">
                        ๐ ูุณุชุฎุฏู Hugging Face ูุฃูุถู ุฌูุฏุฉ ููููุฉ
                      </p>
                    </div>
                  </div>
                ) : generatedImage ? (
                  <img 
                    src={generatedImage} 
                    alt="Generated"
                    className="w-full h-full object-cover rounded-lg"
                  />
                ) : (
                  <div className="text-center">
                    <div className="text-6xl mb-4">๐จ</div>
                    <p className="text-gray-400 font-cairo">ุงูุตูุฑุฉ ุณุชุธูุฑ ููุง</p>
                    <p className="text-xs text-gray-500 font-cairo mt-2">ุงูุชุจ ูุตูุงู ูุงุถุบุท "ุฃูุดุฆ ุงูุตูุฑุฉ"</p>
                  </div>
                )}
              </div>
              
              {generatedImage && (
                <div className="mt-4 p-3 bg-white/5 rounded-lg">
                  <div className="text-xs text-gray-400 font-cairo space-y-1">
                    <div><strong>ุงููุตู:</strong> {prompt}</div>
                    <div><strong>ุงูููุท:</strong> {artStyles.find(s => s.value === style)?.label}</div>
                    <div><strong>ุงููููุฏ:</strong> Hugging Face Stable Diffusion</div>
                  </div>
                </div>
              )}
            </CardContent>
          </Card>
        </div>

        <Card className="bg-black/40 backdrop-blur-sm border-white/10 mt-6">
          <CardHeader>
            <CardTitle className="text-right font-cairo text-white">โก ุฃูุซูุฉ ุณุฑูุนุฉ</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
              {promptExamples.map((example, index) => (
                <Button
                  key={index}
                  variant="outline"
                  className="text-right font-cairo border-white/20 hover:bg-white/10 h-auto py-3 text-wrap"
                  onClick={() => setPrompt(example)}
                >
                  {example}
                </Button>
              ))}
            </div>
          </CardContent>
        </Card>

        {/* ูุตุงุฆุญ ูุชุญุณูู ุงููุชุงุฆุฌ */}
        <Card className="bg-black/40 backdrop-blur-sm border-white/10 mt-6">
          <CardHeader>
            <CardTitle className="text-center font-cairo text-white">๐ก ูุตุงุฆุญ ูุฃูุถู ุงููุชุงุฆุฌ</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6 text-center">
              <div>
                <div className="w-12 h-12 gradient-primary rounded-lg flex items-center justify-center text-2xl mx-auto mb-3">
                  ๐
                </div>
                <h3 className="font-cairo font-semibold text-white mb-2">ูู ููุตูุงู</h3>
                <p className="text-sm text-gray-400 font-cairo">ุงุณุชุฎุฏู ุฃูุตุงูุงู ุชูุตูููุฉ ูุงุถุญุฉ</p>
              </div>
              
              <div>
                <div className="w-12 h-12 gradient-secondary rounded-lg flex items-center justify-center text-2xl mx-auto mb-3">
                  ๐ฏ
                </div>
                <h3 className="font-cairo font-semibold text-white mb-2">ุงุฎุชุฑ ุงูููุท ุงูููุงุณุจ</h3>
                <p className="text-sm text-gray-400 font-cairo">ูู ููุท ูุนุทู ูุชุงุฆุฌ ูุฎุชููุฉ</p>
              </div>
              
              <div>
                <div className="w-12 h-12 gradient-accent rounded-lg flex items-center justify-center text-2xl mx-auto mb-3">
                  โก
                </div>
                <h3 className="font-cairo font-semibold text-white mb-2">ุฌุฑุจ ูุฑุงุช ุนุฏูุฏุฉ</h3>
                <p className="text-sm text-gray-400 font-cairo">ูู ุชูููุฏ ูุนุทู ูุชูุฌุฉ ูุฑูุฏุฉ</p>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

export default ImageGenerator;
